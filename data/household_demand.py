"""
27 Apr, 2018
Code to linear intra/extrapolate from two given limits for fixed intervals
Needed it for making the household demand csv data from graph for final year project
"""

def extrapolate():
	NO_OF_DIVISIONS = 12
	ENDING_LIMIT = 1.6
	STARTING_LIMIT = 1.625

	step_size = (ENDING_LIMIT - STARTING_LIMIT) / NO_OF_DIVISIONS
	outputs = list()
	for i in range(NO_OF_DIVISIONS):
		outputs.append((step_size*i) + STARTING_LIMIT)
	print(outputs)

def plot(input_list):
	import matplotlib.pyplot as plt
	import numpy as np
	plt.plot(np.array(range(len(input_list)))*(1/12), np.array(input_list), "*")
	plt.ylabel("demand in kW/household")
	plt.xlabel("hour of the day")
	plt.show()

def verify(input_list):
	for i in range(len(input_list)-1):
		print(input_list[i+1]-input_list[i], end=', ')

extrapolate()
input_list = [1.625, 1.6229166666666668, 1.6208333333333333, 1.61875, 1.6166666666666667, 1.6145833333333335, 1.6125, 1.6104166666666666, 1.6083333333333334, 1.6062500000000002, 1.6041666666666667, 1.6020833333333333, 1.6, 1.5916666666666668, 1.5833333333333335, 1.5750000000000002, 1.5666666666666667, 1.5583333333333333, 1.55, 1.5416666666666667, 1.5333333333333334, 1.525, 1.5166666666666666, 1.5083333333333333, 1.5, 1.484375, 1.46875, 1.453125, 1.4375, 1.421875, 1.40625, 1.390625, 1.375, 1.359375, 1.34375, 1.328125, 1.3125, 1.3041666666666667, 1.2958333333333334, 1.2875, 1.2791666666666666, 1.2708333333333333, 1.2625, 1.2541666666666667, 1.2458333333333333, 1.2374999999999998, 1.2291666666666665, 1.2208333333333332, 1.2125, 1.1895833333333332, 1.1666666666666665, 1.1437499999999998, 1.1208333333333333, 1.0979166666666667, 1.075, 1.0520833333333333, 1.0291666666666666, 1.00625, 0.9833333333333334, 0.9604166666666667, 0.9375, 0.921875, 0.90625, 0.890625, 0.875, 0.859375, 0.84375, 0.828125, 0.8125, 0.796875, 0.78125, 0.765625, 0.75, 0.7395833333333334, 0.7291666666666666, 0.71875, 0.7083333333333334, 0.6979166666666666, 0.6875, 0.6770833333333334, 0.6666666666666666, 0.65625, 0.6458333333333334, 0.6354166666666666, 0.625, 0.621875, 0.61875, 0.615625, 0.6125, 0.609375, 0.60625, 0.603125, 0.6, 0.596875, 0.59375, 0.5906250000000001, 0.5875, 0.5833333333333334, 0.5791666666666667, 0.575, 0.5708333333333333, 0.5666666666666667, 0.5625, 0.5583333333333333, 0.5541666666666667, 0.55, 0.5458333333333333, 0.5416666666666666, 0.5375, 0.5291666666666667, 0.5208333333333333, 0.5125, 0.5041666666666667, 0.49583333333333335, 0.4875, 0.47916666666666663, 0.4708333333333333, 0.4625, 0.45416666666666666, 0.4458333333333333, 0.4375, 0.4427083333333333, 0.4479166666666667, 0.453125, 0.4583333333333333, 0.4635416666666667, 0.46875, 0.4739583333333333, 0.4791666666666667, 0.484375, 0.4895833333333333, 0.4947916666666667, 0.5, 0.4947916666666667, 0.4895833333333333, 0.484375, 0.4791666666666667, 0.4739583333333333, 0.46875, 0.4635416666666667, 0.4583333333333333, 0.453125, 0.4479166666666667, 0.4427083333333333, 0.4375, 0.4395833333333333, 0.44166666666666665, 0.44375, 0.44583333333333336, 0.4479166666666667, 0.45, 0.45208333333333334, 0.45416666666666666, 0.45625000000000004, 0.45833333333333337, 0.4604166666666667, 0.4625, 0.48125, 0.5, 0.51875, 0.5375, 0.55625, 0.575, 0.59375, 0.6125, 0.63125, 0.65, 0.66875, 0.6875, 0.7135416666666666, 0.7395833333333334, 0.765625, 0.7916666666666666, 0.8177083333333334, 0.84375, 0.8697916666666667, 0.8958333333333334, 0.921875, 0.9479166666666667, 0.9739583333333334, 1.0, 0.9947916666666666, 0.9895833333333334, 0.984375, 0.9791666666666666, 0.9739583333333334, 0.96875, 0.9635416666666666, 0.9583333333333334, 0.953125, 0.9479166666666666, 0.9427083333333334, 0.9375, 0.9041666666666667, 0.8708333333333333, 0.8375, 0.8041666666666667, 0.7708333333333334, 0.7375, 0.7041666666666666, 0.6708333333333334, 0.6375, 0.6041666666666667, 0.5708333333333333, 0.5375, 0.521875, 0.50625, 0.490625, 0.475, 0.459375, 0.44375, 0.428125, 0.4125, 0.396875, 0.38125, 0.365625, 0.35, 0.3552083333333333, 0.36041666666666666, 0.365625, 0.3708333333333333, 0.37604166666666666, 0.38125, 0.3864583333333333, 0.39166666666666666, 0.396875, 0.4020833333333333, 0.40729166666666666, 0.4125, 0.4458333333333333, 0.47916666666666663, 0.5125, 0.5458333333333333, 0.5791666666666666, 0.6125, 0.6458333333333333, 0.6791666666666667, 0.7124999999999999, 0.7458333333333333, 0.7791666666666666, 0.8125, 0.84375, 0.875, 0.90625, 0.9375, 0.96875, 1.0, 1.03125, 1.0625, 1.09375, 1.125, 1.15625, 1.1875, 1.1927083333333333, 1.1979166666666667, 1.203125, 1.2083333333333333, 1.2135416666666667, 1.21875, 1.2239583333333333, 1.2291666666666667, 1.234375, 1.2395833333333333, 1.2447916666666667, 1.25, 1.2572916666666667, 1.2645833333333334, 1.271875, 1.2791666666666666, 1.2864583333333333, 1.29375, 1.3010416666666667, 1.3083333333333333, 1.3156249999999998, 1.3229166666666665, 1.3302083333333332, 1.3375, 1.359375, 1.3812499999999999, 1.403125, 1.425, 1.446875, 1.46875, 1.490625, 1.5125, 1.534375, 1.5562500000000001, 1.578125]
#verify(input_list)
plot(input_list)